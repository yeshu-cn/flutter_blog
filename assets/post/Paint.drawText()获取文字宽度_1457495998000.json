{"title":"Paint.drawText()获取文字宽度","createTime":1457495998000,"updateTime":1457455101000,"category":"default","content":" \n  \n ```java \n String str = \"Hello\";   \n canvas.drawText( str , x , y , paint);   \n    \n //1. 粗略计算文字宽度   \n Log.d(TAG, \"measureText=\" + paint.measureText(str));   \n    \n //2. 计算文字所在矩形，可以得到宽高   \n Rect rect = new Rect();   \n paint.getTextBounds(str, 0, str.length(), rect);   \n int w = rect.width();   \n int h = rect.height();   \n Log.d(TAG, \"w=\" +w+\"  h=\"+h);   \n    \n //3. 精确计算文字宽度   \n int textWidth = getTextWidth(paint, str);   \n Log.d(TAG, \"textWidth=\" + textWidth);   \n  \n //第二个参数是一个数组.传进去个长度跟字符串长度相同的float数组,方法调用后,里边塞的是每个字符的长度.   \n     public static int getTextWidth(Paint paint, String str) {   \n         int iRet = 0;   \n         if (str != null && str.length() > 0) {   \n             int len = str.length();   \n             float[] widths = new float[len];   \n             paint.getTextWidths(str, widths);   \n             for (int j = 0; j < len; j++) {   \n                 iRet += (int) Math.ceil(widths[j]);   \n             }   \n         }   \n         return iRet;   \n     }   \n  \n ``` \n  \n 资料： \n  \n * <http://www.eoeandroid.com/thread-13672-1-1.html?_dsign=773b5e0d> \n * <http://blog.csdn.net/chuekup/article/details/7518239> \n  \n  \n `measureText()`比`getTextBounds`多加上了左右的间距(Advance value) \n  <http://stackoverflow.com/questions/7549182/android-paint-measuretext-vs-gettextbounds> \n  \n `getTextWidths()` ：Return the advance widths for the characters in the string。 \n 主要看回答中的两张图就明白了。 \n <http://stackoverflow.com/questions/20103312/paint-gettextwidths-what-is-advance-width> \n  \n 所以`measureText()`和`getTextWidths()`方法获取的宽度是相同的，测试过了。"}