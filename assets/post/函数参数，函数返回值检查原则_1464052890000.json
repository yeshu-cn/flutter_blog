{"title":"函数参数，函数返回值检查原则","createTime":1464052890000,"updateTime":1464053259000,"category":"架构设计","content":" \n  \n 1. 函数参数检查原则：**只有public方法才进行参数检查**。private方法参数不需要检查，因为一般如果参数不合法还去调用私有方法，说明自身内部代码逻辑有问题。 \n 2. 函数返回值检查原则：该返回值可能会造成该函数内代码崩溃**一定要进行检查** \n  \n 函数说明时使用注解,明确说明不接受`Null` \n  \n ```java \n        void openTaskDetails(@NonNull Task requestedTask); \n  \n         void completeTask(@NonNull Task completedTask); \n  \n         void activateTask(@NonNull Task activeTask); \n ``` \n  \n 函数实现中参数检查 \n  \n ```java \n   @Override \n     public void openTaskDetails(@NonNull Task requestedTask) { \n         checkNotNull(requestedTask, \"requestedTask cannot be null!\"); \n         mTasksView.showTaskDetailsUi(requestedTask.getId()); \n     } \n  \n     public static <T> T checkNotNull(T reference) { \n         if (reference == null) { \n             throw new NullPointerException(); \n         } \n         return reference; \n     } \n  \n     public static <T> T checkNotNull(T reference, @Nullable Object errorMessage) { \n         if (reference == null) { \n             throw new NullPointerException(String.valueOf(errorMessage)); \n         } \n         return reference; \n     } \n ```"}