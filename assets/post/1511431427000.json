{"title":"Android permission","createTime":1511431427000,"updateTime":-1,"category":"default","content":" \n  \n # Android 6.0权限变化和申请 \n  \n https://developer.android.com/training/permissions/requesting.html \n  \n AdnroidManifest.xml中还是要依旧申明权限 \n  \n 系统权限分为两类：正常权限和危险权限 \n  \n * 正常权限不会给用户带来隐私问题，安装的时候会默认赋予 \n * 危险权限会授予访问用户隐私数据，安装的时候会默认禁用掉 \n  \n ## 检查权限 \n  \n ```java \n int permissionCheck = ContextCompat.checkSelfPermission(thisActivity, \n         Manifest.permission.WRITE_CALENDAR); \n ``` \n  \n 返回值   \n `PackageManager.PERMISSION_GRANTED`, `PackageManager.PERMISSION_DENIED` \n  \n ## 请求权限 \n  \n ```java \n ActivityCompat.requestPermissions(thisActivity, \n                 new String[]{Manifest.permission.READ_CONTACTS}, \n                 MY_PERMISSIONS_REQUEST_READ_CONTACTS); \n  \n  \n  \n @Override \n public void onRequestPermissionsResult(int requestCode, \n         String permissions[], int[] grantResults) { \n     switch (requestCode) { \n         case MY_PERMISSIONS_REQUEST_READ_CONTACTS: { \n             // If request is cancelled, the result arrays are empty. \n             if (grantResults.length > 0 \n                 && grantResults[0] == PackageManager.PERMISSION_GRANTED) { \n  \n                 // permission was granted, yay! Do the \n                 // contacts-related task you need to do. \n  \n             } else { \n  \n                 // permission denied, boo! Disable the \n                 // functionality that depends on this permission. \n             } \n             return; \n         } \n  \n         // other 'case' lines to check for other \n         // permissions this app might request \n     } \n } \n  \n ``` \n  \n `requestPermission`会弹出一个系统的对话框，用户可以选择`拒绝`或者`允许`权限申请 \n  \n ![](https://developer.android.com/images/training/permissions/request_permission_dialog.png) \n  \n * 用户点击允许时，权限申请成功 \n * 用户点击拒绝时，权限申请失败 \n * 用户点击拒绝，并勾选不在提示时，下次申请权限将直接失败 \n * 多次选择拒绝后，再次申请权限才会出现不在提示的`checkbox` \n  \n  \n Fragment中使用`FragmentCompat.requestPermissions()`才会触发`onRequestPermmissionsResult()`回调 \n  \n  \n ## 判断用户有没有点击过拒绝过授予权限 \n  \n  \n ```java \n ActivityCompat.shouldShowRequestPermissionRationale(thisActivity, \n             Manifest.permission.READ_CONTACTS) \n ``` \n  \n * 用户没点击过拒绝，将返回false \n * 用户点击过拒绝，没有勾选不在提示，返回true \n * 用户勾选了不在提示，并拒绝，返回false \n  \n ## 权限和权限组 \n  \n 当您授予权限组中的一个权限时，系统将自动授予app整个权限组的权限，例如： \n  \n > 例如，假设您在应用清单中列出了 READ_CONTACTS 和 WRITE_CONTACTS。如果您请求 READ_CONTACTS 且用户授予了此权限，那么，当您请求 WRITE_CONTACTS 时，系统将立即授予您该权限，不会与用户交互。 \n  \n  \n 权限组：https://developer.android.com/guide/topics/security/permissions.html#perm-groups"}