{"title":"handler机制笔记","createTime":1442110547000,"updateTime":1442111073000,"category":"default","content":" \n  \n  \n * Looper和MessageQueue是一一对应关系，创建Looper时会自动创建一个MessageQueue \n * 一个Looper可以绑定很多个handler \n * Activity启动时会UI线程会自动Looper.prepare()创建一个Looper \n * 一个线程只有一个Looper，但可以有很多个handler \n  \n ```java \n //创建包含Looper的线程 \n  class LooperThread extends Thread { \n  \tpublic Handler mHandler; \n \tpublic void run() { \n \t\tLooper.prepare(); \n \t\tmHandler = new Handler() { \n        \tpublic void handleMessage(Message msg) { \n        \t// process incoming messages here \n \t\t\t}}; \n                Looper.loop(); \n \t} \n  } \n ``` \n  \n ```java \n private static void prepare(boolean quitAllowed) { \n         if (sThreadLocal.get() != null) { \n             throw new RuntimeException(\"Only one Looper may be created per thread\"); \n         } \n         sThreadLocal.set(new Looper(quitAllowed)); \n     } \n  \n //Looper中包含一个MessageQueue \n private Looper(boolean quitAllowed) { \n         mQueue = new MessageQueue(quitAllowed); \n         mThread = Thread.currentThread(); \n     } \n  \n ```"}