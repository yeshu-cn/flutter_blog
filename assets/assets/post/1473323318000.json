{"title":"Git笔记","createTime":1473323318000,"updateTime":-1,"category":"default","content":" \n  \n #### 常用命令 \n  \n 远程仓库的默认名称是`origin`   \n  \n * 查看分支：`git branch`   \n * 创建分支：`git branch <name>` \n * 切换分支：`git checkout <name>` \n * 创建+切换分支：`git checkout -b <name>` \n * 合并某分支到当前分支：`git merge <name>` \n * 删除分支：`git branch -d <name>` \n * 查看远程仓库：`git remote －v` \n * 推送本地代码到远程仓库 `git push origin <branch-name>` \n * 存放临时代码：`git stash, git stash pop` \n  \n #### git pull \n  \n git pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。 \n  \n ```bash\t \n #如果远程分支是与当前分支合并，则冒号后面的部分可以省略。 \n $ git pull <远程主机名> <远程分支名>:<本地分支名> \n \t \n #拉取远程仓库origin master分支与当前分支合并 \n $ git pull origin master \n ``` \n  \n #### 工作中git笔记 \n  \n ```bash \n git pull --rebase \n git push origin HEAD:refs/for/develop \n ``` \n  \n #### git工作环境配置 \n  \n #####  配置user.email和user.name \n  \n ```bash \n #Github配置成全局的 \n git config --global user.name \"yeshu\" \n git config --global user.email \"guan.yeshu@gamil.com\" \n  \n #公司git配置成局部的 \n #项目目录下执行 \n git config user.name \"xxx\" \n git config user.email \"xxx@xx.com\" \n  \n #查看当前项目使用的git信息 \n git config --list \n ``` \n  \n #####  配置ssh kye访问规则 \n  \n * github和公司分别生成两个不同的ssh key \n  \n ```bash \n $ ssh-keygen -t rsa -C \"xxx@gmail.com\" \n ``` \n *  `~/.ssh`目录下创建config文件 \n  \n ```bash \n ##公司的gerrit服务器 \n Host gerrit \n \tHostName www.xxx.com \n \tPreferredAuthentications publickey \n \tUser xxxx \n \tIdentityFile ~/.ssh/id_rsa \n  \n ##github \n Host github \n \tHostName github.com \n \tPreferredAuthentications publickey \n \tUser guan.yeshu@gmail.com \n \tIdentityFile ~/.ssh/id_rsa_github \n ``` \n  \n #### 将本地数据推送到github中 \n  \n ```bash \n git init \n git add . \n git commit -m \"add data\" \n git remote add origin https://github.com/yeshu-cn/hexoBlog.git \n git pull origin master #更新github中最新数据 \n git push -u origin master \n  \n ``` \n  \n #### git commit --amend失败 \n  \n 已经push后，又使用`--amend`提交导致push失败。 \n  \n ```bash \n # 查看本地历史记录 \n git reflog \n # 回滚（保留了修改,reset --hard会不保留修改） \n git reset ebb1864 \n # 再重新commit提交 \n  \n ``` \n  \n "}