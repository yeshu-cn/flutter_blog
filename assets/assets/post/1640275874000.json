{"title":"app_sudoku","createTime":1640275874000,"updateTime":-1,"category":"default","content":" \n  \n # 数独 \n  \n ![](app-sudoku/1.jpg) \n  \n  \n  \n ## 使用的技术和三方库 \n * `intl`实现国际化 \n * `hive`本地存储数据 \n * `lottie`实现json动画播放 \n * `audioplayers`实现按键声音的播放 \n * `in_app_purchase`实现ios app内购 \n * `google_mobile_ads`实现奖励广告的显示 \n * `sudoku_solver_generator`实现数独谜题的生成 \n * `scoped_model`实现监听数据变化，更新相关界面的`widget` \n * `sprintf`实现dart中的格式化字符串功能 \n * `DynamicTheme`实现主题颜色的动态设置 \n * 动画实现 \n     * 图标动画 \n         * 加载`json`动画实现 \n         * 直接使用`AnimatedIcon` \n     * `SlideTransition`实现游戏填数完成时`cell`的位移动画 \n     * `PageTransitionSwitcher`实现草稿键盘切换显示的渐变动画 \n * 通过`GridView`和`cell`的`border`计算实现数独界面的表格样式 \n * 自定义封装`Sudoku` `widget` \n  \n ## In App Purchase \n ### AppStore中填写好付款信息，编辑好内购的项目，内购项目分为四类 \n  \n * 消耗 （服务端不保存购买状态，需要开发者自己保存） \n * 非消耗（只能购买一次，重复购买会返回失败，可以通过api查询出来购买状态） \n * 自动订阅 \n * 不自动订阅 \n  \n 参考：https://developer.apple.com/in-app-purchase/ \n  \n ### 客户端测试(有两种方法) \n  \n 1. [第一种使用AppStore的沙盒账号进行测试](https://developer.apple.com/in-app-purchase/) \n 2. [第二种使用StoreKit进行测试](https://developer.apple.com/documentation/xcode/setting-up-storekit-testing-in-xcode?preferredLanguage=occ) \n  \n 注意 \n * StoreKit必须使用Xcode启动App，但这个必须在iOS 14后才支持。 \n * 沙盒账号必须在真机上测试， \n  \n ## 国际化 \n * https://www.jianshu.com/p/dd7862e8ae66 \n * https://stackoverflow.com/a/68324520/1832389 \n  \n ## 主题 \n 通过主题管理`Button`样式 \n * [MaterialButton](https://api.flutter.dev/flutter/material/MaterialButton-class.html) \n * [ButtonStyle](https://api.flutter.dev/flutter/material/ButtonStyle-class.html) \n  \n **总结** \n * `MaterialButton` 弃用了。 \n * 使用`TextButton`,`ElevatedButton`,`OutlinedButton`替换原来的`FlatButton`,`RaisedButton`,`OutlineButton`。 \n * 使用`ButtonStyle`来定义按键的样式，可以通过`TextButton.styleFrom（）`来创建`ButtonStyle`。 \n  \n **定义单个按钮的样式** \n ```dart \n TextButton( \n   style: TextButton.styleFrom(primary: Colors.green), \n ) \n ``` \n **通过主题定义按钮样式** \n ```dart \n MaterialApp( \n   theme: ThemeData( \n     textButtonTheme: TextButtonThemeData( \n       style: TextButton.styleFrom(primary: Colors.green), \n     ), \n   ), \n   home: MyAppHome(), \n ) \n ``` \n  \n ## 动画框架 \n  \n 动画设计：Material motion system \n * Container transform \n * Shared axis \n * Fade through \n * Fade \n  \n 对应实现：Flutter animation package \n * Container transform \n * Shared axis transition \n * Fade through transition \n * Fade transition \n  \n ## 知识点 \n * Containers with no children try to be as big as possible \n * GridView高度不能wrap_content,GridView在Column中高度会莫名其妙的多处一点，只有把它放在ListView中就好了。 \n * ListView默认会多出一个间隔[Unexpected top padding in ListView put inside scaffold with no appBar](https://github.com/flutter/flutter/issues/14842) \n  \n ```dart \n return MediaQuery.removePadding( \n     context: context, \n     removeTop: true, \n     child: ListView.builder( \n      ....... \n     ) \n ``` \n "}